{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoctorNav from './doctorNav/doctorNav';\nimport DoctorSide from './doctorSide/doctorSide';\nimport DoctorContent from './doctorContent/doctorContent';\nimport './doctor.css';\nimport { Navigate } from 'react-router-dom';\nimport { getUserFromStorage } from '../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Doctor() {\n  _s();\n  const user = getUserFromStorage();\n  const [elm, setElm] = useState('1');\n  if (user == null) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  } else if (user.personnel_type !== 'doctor') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/${user.personnel_type}`,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  function displayElm(x) {\n    setElm(x);\n    console.log(x);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"do\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sAndC2\",\n      children: [/*#__PURE__*/_jsxDEV(DoctorSide, {\n        disp: displayElm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DoctorContent, {\n        elm1: elm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Doctor, \"7Kd7bEmQHale3XAShacLuujm71A=\");\n_c = Doctor;\nexport default Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","DoctorNav","DoctorSide","DoctorContent","Navigate","getUserFromStorage","jsxDEV","_jsxDEV","Doctor","_s","user","elm","setElm","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","personnel_type","displayElm","x","console","log","className","children","disp","elm1","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctor.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DoctorNav from './doctorNav/doctorNav'\nimport DoctorSide from './doctorSide/doctorSide'\nimport DoctorContent from './doctorContent/doctorContent'\nimport './doctor.css'\nimport { Navigate } from 'react-router-dom';\nimport { getUserFromStorage } from '../../utils/storage'\n\nfunction Doctor() {\n    const user = getUserFromStorage()\n    const [elm, setElm] = useState('1')\n\n    if (user == null) {\n        return <Navigate to=\"/\" replace />;\n    } else if (user.personnel_type !== 'doctor') {\n        return <Navigate to={`/${user.personnel_type}`} replace />;\n    }\n\n\n    function displayElm(x) {\n        setElm(x)\n        console.log(x)\n    }\n\n    return (\n        <div className='do'>\n            <DoctorNav />\n            <div className='sAndC2'>\n                <DoctorSide disp={displayElm} />\n                <DoctorContent elm1={elm} />\n            </div>\n        </div>\n    )\n}\n\nexport default Doctor"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,kBAAkB,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,IAAI,GAAGL,kBAAkB,CAAC,CAAC;EACjC,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAEnC,IAAIU,IAAI,IAAI,IAAI,EAAE;IACd,oBAAOH,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC,CAAC,MAAM,IAAIR,IAAI,CAACS,cAAc,KAAK,QAAQ,EAAE;IACzC,oBAAOZ,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAG,IAAGH,IAAI,CAACS,cAAe,EAAE;MAACL,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9D;EAGA,SAASE,UAAUA,CAACC,CAAC,EAAE;IACnBT,MAAM,CAACS,CAAC,CAAC;IACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB;EAEA,oBACId,OAAA;IAAKiB,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACflB,OAAA,CAACN,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbX,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBlB,OAAA,CAACL,UAAU;QAACwB,IAAI,EAAEN;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCX,OAAA,CAACJ,aAAa;QAACwB,IAAI,EAAEhB;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACT,EAAA,CAzBQD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA2Bf,eAAeA,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}