{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/home/intro/sign/signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './signin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signin() {\n  _s();\n  const [loginDetails, setLoginDetails] = useState({\n    cin: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginDetails({\n      ...loginDetails,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Login Details:', loginDetails);\n    // Here you would usually verify the details against the backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      ons: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cin\",\n        value: loginDetails.cin,\n        onChange: handleChange,\n        placeholder: \"CIN\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: loginDetails.password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Signin, \"SIa7y5tWNnqiRR3jweysqNNgzvc=\");\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signin","_s","loginDetails","setLoginDetails","cin","password","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","children","className","ons","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/home/intro/sign/signin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './signin.css'\n\nfunction Signin() {\n    const [loginDetails, setLoginDetails] = useState({\n        cin: '',\n        password: '',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setLoginDetails({\n            ...loginDetails,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('Login Details:', loginDetails);\n        // Here you would usually verify the details against the backend\n    };\n\n    return (\n        <div>\n            <form className=\"auth-form\" ons>\n                <h2 >Sign In</h2>\n                <input\n                    type=\"text\"\n                    name=\"cin\"\n                    value={loginDetails.cin}\n                    onChange={handleChange}\n                    placeholder=\"CIN\"\n                    required\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={loginDetails.password}\n                    onChange={handleChange}\n                    placeholder=\"Password\"\n                    required\n                />\n                <button type=\"submit\">Sign In</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Signin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC;IAC7CO,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,eAAe,CAAC;MACZ,GAAGD,YAAY;MACf,CAACM,IAAI,GAAGC;IACZ,CAAC,CAAC;EACN,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,YAAY,CAAC;IAC3C;EACJ,CAAC;EAED,oBACIH,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAMiB,SAAS,EAAC,WAAW;MAACC,GAAG;MAAAF,QAAA,gBAC3BhB,OAAA;QAAAgB,QAAA,EAAK;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBtB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXd,IAAI,EAAC,KAAK;QACVC,KAAK,EAAEP,YAAY,CAACE,GAAI;QACxBmB,QAAQ,EAAEjB,YAAa;QACvBkB,WAAW,EAAC,KAAK;QACjBC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtB,OAAA;QACIuB,IAAI,EAAC,UAAU;QACfd,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEP,YAAY,CAACG,QAAS;QAC7BkB,QAAQ,EAAEjB,YAAa;QACvBkB,WAAW,EAAC,UAAU;QACtBC,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACpB,EAAA,CA5CQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AA8Cf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}