{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/nurse/nurseContent/pages/nurseProfile/nurseProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './nurseProfile.css';\nimport { getUserFromStorage } from '../../../../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NurseProfile() {\n  _s();\n  const user = getUserFromStorage();\n  const [responseStatus, setResponseStatus] = useState(0);\n  const [responseMessage, setResponseMessage] = useState('');\n  const [formData, setFormData] = useState({\n    cin: '',\n    name: '',\n    date: '',\n    tel: '',\n    email: '',\n    password: ''\n  });\n\n  // state of inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validateEmail = email => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  };\n\n  // add personnel\n  const addPer = async event => {\n    event.preventDefault();\n    if (!validateEmail(formData.email)) {\n      alert(\"Please enter a valid email.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/add_personnel', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Extract data from the response\n      const data = response.data;\n      setResponseMessage(data.message); // Assuming this is a function you've defined to set a response message\n      setFormData({\n        cin: '',\n        name: '',\n        date: '',\n        type: 'nurse',\n        service: '1',\n        tel: '',\n        email: '',\n        password: ''\n      });\n      if (response.status === 201) {\n        // Handle success\n        setResponseStatus(response.status);\n        console.log(\"Success:\", data);\n      } else {\n        // Handle failure\n        console.error(\"Failure:\", data);\n      }\n    } catch (error) {\n      // Handle errors from the request itself (e.g., network errors, timeout errors)\n      console.error(\"Error during the request:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"profile1\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"nurseProfile\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cin\",\n        placeholder: \"CIN\",\n        value: formData.cin,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        value: formData.name,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: [\"Date of birth:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: formData.date,\n          required: true,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"tel\",\n        placeholder: \"Phone number\",\n        value: formData.tel,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(NurseProfile, \"lQXETG2is9vJMSXNwybNfsUGN9g=\");\n_c = NurseProfile;\nexport default NurseProfile;\nvar _c;\n$RefreshReg$(_c, \"NurseProfile\");","map":{"version":3,"names":["React","useState","axios","getUserFromStorage","jsxDEV","_jsxDEV","NurseProfile","_s","user","responseStatus","setResponseStatus","responseMessage","setResponseMessage","formData","setFormData","cin","name","date","tel","email","password","handleInputChange","e","value","target","validateEmail","test","addPer","event","preventDefault","alert","response","post","headers","data","message","type","service","status","console","log","error","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","required","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/nurse/nurseContent/pages/nurseProfile/nurseProfile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport './nurseProfile.css'\nimport { getUserFromStorage } from '../../../../../utils/storage';\n\nfunction NurseProfile() {\n    const user = getUserFromStorage()\n    const [responseStatus, setResponseStatus] = useState(0);\n    const [responseMessage, setResponseMessage] = useState('');\n\n    const [formData, setFormData] = useState({\n        cin: '',\n        name: '',\n        date: '',\n        tel: '',\n        email: '',\n        password: ''\n    });\n\n    // state of inputs\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const validateEmail = (email) => {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    };\n\n    // add personnel\n    const addPer = async (event) => {\n        event.preventDefault();\n        if (!validateEmail(formData.email)) {\n            alert(\"Please enter a valid email.\");\n            return;\n        }\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/add_personnel', formData, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            // Extract data from the response\n            const data = response.data;\n            setResponseMessage(data.message);  // Assuming this is a function you've defined to set a response message\n            setFormData({\n                cin: '',\n                name: '',\n                date: '',\n                type: 'nurse',\n                service: '1',\n                tel: '',\n                email: '',\n                password: ''\n            });\n\n            if (response.status === 201) {\n                // Handle success\n                setResponseStatus(response.status)\n                console.log(\"Success:\", data);\n            } else {\n                // Handle failure\n                console.error(\"Failure:\", data);\n            }\n\n        } catch (error) {\n            // Handle errors from the request itself (e.g., network errors, timeout errors)\n            console.error(\"Error during the request:\", error.message);\n        }\n    };\n    \n    return (\n        <div>\n            <h2 id='profile1'>Profile</h2>\n\n            <form className=\"nurseProfile\">\n                <input\n                    type=\"text\"\n                    name=\"cin\"\n                    placeholder=\"CIN\"\n                    value={formData.cin}\n                    required\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Full Name\"\n                    value={formData.name}\n                    required\n                    onChange={handleInputChange}\n                />\n                <label htmlFor=\"date\">Date of birth:\n                    <input\n                        type=\"date\"\n                        name=\"date\"\n                        value={formData.date}\n                        required\n                        onChange={handleInputChange}\n                    />\n                </label>\n                <input\n                    type=\"tel\"\n                    name=\"tel\"\n                    placeholder=\"Phone number\"\n                    value={formData.tel}\n                    required\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={formData.email}\n                    required\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={formData.password}\n                    required\n                    onChange={handleInputChange}\n                />\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NurseProfile"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}