{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctorContent/pages/treatment/treatment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './treatment.css';\nimport { getUserFromStorage } from '../../../../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Treatment() {\n  _s();\n  const user = getUserFromStorage();\n  const [formData, setFormData] = useState({\n    consult_id: '',\n    cinPer: user.cin_personnel,\n    treatment: ''\n  });\n\n  // state of inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // add patient\n  const addPat = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/add_patient', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Extract data from the response\n      const data = response.data;\n      setResponseMessage(data.message); // Assuming this is a function you've defined to set a response message\n      setFormData({\n        cin: '',\n        name: '',\n        date: '',\n        sex: 'male',\n        tel: '',\n        email: '',\n        address: ''\n      });\n      if (response.status === 201) {\n        // Handle success\n        setResponseStatus(response.status);\n        console.log(\"Success:\", data);\n      } else {\n        // Handle failure\n        console.error(\"Failure:\", data);\n      }\n    } catch (error) {\n      // Handle errors from the request itself (e.g., network errors, timeout errors)\n      console.error(\"Error during the request:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"treat\",\n      children: \"Treatment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"serchPat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter the ID of this consultation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"consult_id\",\n        placeholder: \"Consultation ID\",\n        value: formData.consult_id,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter the treatment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"treatment\",\n        id: \"treatment\",\n        cols: \"30\",\n        rows: \"10\",\n        value: formData.treatment,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Treatment, \"crfvFx7QDibadcvqLZsiVLIUIZM=\");\n_c = Treatment;\nexport default Treatment;\nvar _c;\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"names":["React","useState","getUserFromStorage","jsxDEV","_jsxDEV","Treatment","_s","user","formData","setFormData","consult_id","cinPer","cin_personnel","treatment","handleInputChange","e","name","value","target","addPat","event","preventDefault","response","axios","post","headers","data","setResponseMessage","message","cin","date","sex","tel","email","address","status","setResponseStatus","console","log","error","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","required","onChange","cols","rows","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctorContent/pages/treatment/treatment.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './treatment.css'\nimport { getUserFromStorage } from '../../../../../utils/storage'\n\nfunction Treatment() {\n    const user = getUserFromStorage()\n    const [formData, setFormData] = useState({\n        consult_id: '',\n        cinPer: user.cin_personnel,\n        treatment: '',\n    })\n\n    // state of inputs\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n\n// add patient\n  const addPat = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/add_patient', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Extract data from the response\n      const data = response.data;\n      setResponseMessage(data.message);  // Assuming this is a function you've defined to set a response message\n      setFormData({\n        cin: '',\n        name: '',\n        date: '',\n        sex: 'male',\n        tel: '',\n        email: '',\n        address: ''\n      });\n\n      if (response.status === 201) {\n        // Handle success\n        setResponseStatus(response.status)\n        console.log(\"Success:\", data);\n      } else {\n        // Handle failure\n        console.error(\"Failure:\", data);\n      }\n\n    } catch (error) {\n      // Handle errors from the request itself (e.g., network errors, timeout errors)\n      console.error(\"Error during the request:\", error.message);\n    }\n  };\n\n\n    return (\n        <div>\n            <h2 id='treat'>Treatment</h2>\n\n            <form className=\"serchPat\">\n                <h4>Enter the ID of this consultation:</h4>\n                <input type=\"text\" name=\"consult_id\" placeholder=\"Consultation ID\" value={formData.consult_id} required onChange={handleInputChange}/>\n                <h4>Enter the treatment:</h4>\n                <textarea name=\"treatment\" id=\"treatment\" cols=\"30\" rows=\"10\" value={formData.treatment} onChange={handleInputChange} required></textarea>\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Treatment"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}