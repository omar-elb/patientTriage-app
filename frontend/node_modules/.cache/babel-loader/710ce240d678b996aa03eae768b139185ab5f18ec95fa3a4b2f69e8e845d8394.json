{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/nurse/nurse.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NurseNave from './nurseNav/nurseNave';\nimport NurseContent from './nurseContent/nurseContent';\nimport NurseSide from './nurseSide/nurseSide';\nimport './nurse.css';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nurse() {\n  _s();\n  const [elm, setElm] = useState('1');\n  const user = useSelector(state => state.user.value);\n  if (user == null) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } else if (user.personnel_type === 'doctor') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/doctor\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  useEffect(() => {\n    if (user === null) {\n      navigate('/', {\n        replace: true\n      });\n    } else if (user.personnel_type === 'doctor') {\n      navigate('/doctor', {\n        replace: true\n      });\n    }\n    // Include additional conditions as needed\n  }, [user, navigate]);\n  function displayElm(x) {\n    setElm(x);\n    console.log(x);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nu\",\n    children: [/*#__PURE__*/_jsxDEV(NurseNave, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sAndC1\",\n      children: [/*#__PURE__*/_jsxDEV(NurseSide, {\n        disp: displayElm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NurseContent, {\n        elm1: elm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Nurse, \"ZkkujfuSHwqZyJnxcNsaxdYJFig=\", false, function () {\n  return [useSelector];\n});\n_c = Nurse;\nexport default Nurse;\nvar _c;\n$RefreshReg$(_c, \"Nurse\");","map":{"version":3,"names":["React","useState","NurseNave","NurseContent","NurseSide","Navigate","useSelector","jsxDEV","_jsxDEV","Nurse","_s","elm","setElm","user","state","value","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","personnel_type","useEffect","navigate","displayElm","x","console","log","className","children","disp","elm1","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/nurse/nurse.js"],"sourcesContent":["import React, { useState } from 'react'\nimport NurseNave from './nurseNav/nurseNave'\nimport NurseContent from './nurseContent/nurseContent'\nimport NurseSide from './nurseSide/nurseSide'\nimport './nurse.css'\nimport { Navigate } from 'react-router-dom'\nimport { useSelector } from \"react-redux\";\n\nfunction Nurse() {\n  const [elm, setElm] = useState('1')\n\n  const user = useSelector(state => state.user.value);\n  if (user == null) {\n    return <Navigate to=\"/\" replace />;\n  } else if (user.personnel_type === 'doctor') {\n    return <Navigate to=\"/doctor\" replace />;\n  }\n\n  useEffect(() => {\n    if (user === null) {\n        navigate('/', { replace: true });\n    } else if (user.personnel_type === 'doctor') {\n        navigate('/doctor', { replace: true });\n    }\n    // Include additional conditions as needed\n  }, [user, navigate]);\n\n  function displayElm(x) {\n    setElm(x)\n    console.log(x)\n  }\n  return (\n    <div className='nu'>\n      <NurseNave />\n      <div className='sAndC1'>\n        <NurseSide disp={displayElm} />\n        <NurseContent elm1={elm} />\n      </div>\n    </div>\n  )\n}\n\nexport default Nurse"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEnC,MAAMY,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAI,CAACE,KAAK,CAAC;EACnD,IAAIF,IAAI,IAAI,IAAI,EAAE;IAChB,oBAAOL,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC,CAAC,MAAM,IAAIR,IAAI,CAACS,cAAc,KAAK,QAAQ,EAAE;IAC3C,oBAAOd,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,SAAS;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1C;EAEAE,SAAS,CAAC,MAAM;IACd,IAAIV,IAAI,KAAK,IAAI,EAAE;MACfW,QAAQ,CAAC,GAAG,EAAE;QAAEP,OAAO,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC,MAAM,IAAIJ,IAAI,CAACS,cAAc,KAAK,QAAQ,EAAE;MACzCE,QAAQ,CAAC,SAAS,EAAE;QAAEP,OAAO,EAAE;MAAK,CAAC,CAAC;IAC1C;IACA;EACF,CAAC,EAAE,CAACJ,IAAI,EAAEW,QAAQ,CAAC,CAAC;EAEpB,SAASC,UAAUA,CAACC,CAAC,EAAE;IACrBd,MAAM,CAACc,CAAC,CAAC;IACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;EACA,oBACElB,OAAA;IAAKqB,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACjBtB,OAAA,CAACN,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbb,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBtB,OAAA,CAACJ,SAAS;QAAC2B,IAAI,EAAEN;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/Bb,OAAA,CAACL,YAAY;QAAC6B,IAAI,EAAErB;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAhCQD,KAAK;EAAA,QAGCH,WAAW;AAAA;AAAA2B,EAAA,GAHjBxB,KAAK;AAkCd,eAAeA,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}