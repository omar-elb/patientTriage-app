{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoctorNav from './doctorNav/doctorNav';\nimport DoctorSide from './doctorSide/doctorSide';\nimport DoctorContent from './doctorContent/doctorContent';\nimport './doctor.css';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Doctor() {\n  _s();\n  const [elm, setElm] = useState('1');\n  const user = useSelector(state => state.user.value);\n  if (user == null) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  } else if (user.personnel_type === 'nurse') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/nurse\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  function displayElm(x) {\n    setElm(x);\n    console.log(x);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"do\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sAndC2\",\n      children: [/*#__PURE__*/_jsxDEV(DoctorSide, {\n        disp: displayElm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DoctorContent, {\n        elm1: elm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Doctor, \"o6MIWGNUEfb4hW5GnKSfc0dcnww=\", false, function () {\n  return [useSelector];\n});\n_c = Doctor;\nexport default Doctor;\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["React","useState","DoctorNav","DoctorSide","DoctorContent","Navigate","useSelector","jsxDEV","_jsxDEV","Doctor","_s","elm","setElm","user","state","value","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","personnel_type","displayElm","x","console","log","className","children","disp","elm1","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctor.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DoctorNav from './doctorNav/doctorNav'\nimport DoctorSide from './doctorSide/doctorSide'\nimport DoctorContent from './doctorContent/doctorContent'\nimport './doctor.css'\nimport { Navigate } from 'react-router-dom'\nimport { useSelector } from \"react-redux\";\n\nfunction Doctor() {\n    const [elm, setElm] = useState('1')\n    \n    const user = useSelector(state => state.user.value);\n    if (user == null) {\n        return <Navigate to=\"/\" replace />;\n    } else if (user.personnel_type === 'nurse') {\n        return <Navigate to=\"/nurse\" replace />;\n    }\n    \n    \n\n    function displayElm(x) {\n        setElm(x)\n        console.log(x)\n    }\n\n    return (\n        <div className='do'>\n            <DoctorNav />\n            <div className='sAndC2'>\n                <DoctorSide disp={displayElm} />\n                <DoctorContent elm1={elm} />\n            </div>\n        </div>\n    )\n}\n\nexport default Doctor"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEnC,MAAMY,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAI,CAACE,KAAK,CAAC;EACnD,IAAIF,IAAI,IAAI,IAAI,EAAE;IACd,oBAAOL,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC,CAAC,MAAM,IAAIR,IAAI,CAACS,cAAc,KAAK,OAAO,EAAE;IACxC,oBAAOd,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAIA,SAASE,UAAUA,CAACC,CAAC,EAAE;IACnBZ,MAAM,CAACY,CAAC,CAAC;IACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB;EAEA,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACfpB,OAAA,CAACN,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbb,OAAA;MAAKmB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBpB,OAAA,CAACL,UAAU;QAAC0B,IAAI,EAAEN;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCb,OAAA,CAACJ,aAAa;QAAC0B,IAAI,EAAEnB;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACX,EAAA,CA1BQD,MAAM;EAAA,QAGEH,WAAW;AAAA;AAAAyB,EAAA,GAHnBtB,MAAM;AA4Bf,eAAeA,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}