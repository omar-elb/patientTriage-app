{"ast":null,"code":"var _jsxFileName = \"/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctorContent/pages/treatment/treatment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './treatment.css';\nimport { getUserFromStorage } from '../../../../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Treatment() {\n  _s();\n  const user = getUserFromStorage();\n  const [responseStatus, setResponseStatus] = useState(0);\n  const [responseMessage, setResponseMessage] = useState('');\n  const [formData, setFormData] = useState({\n    consult_id: '',\n    cinPer: user.cin_personnel,\n    treatment: ''\n  });\n\n  // state of inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // add treatment\n  const addTreatment = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/add_treatment', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Extract data from the response\n      const data = response.data;\n      setResponseMessage(data.message); // Assuming this is a function you've defined to set a response message\n      setFormData({\n        consult_id: '',\n        cinPer: user.cin_personnel,\n        treatment: ''\n      });\n      if (response.status === 201) {\n        // Handle success\n        setResponseStatus(response.status);\n        console.log(\"Success:\", data);\n      } else {\n        // Handle failure\n        setResponseStatus;\n        console.error(\"Failure:\", data);\n      }\n    } catch (error) {\n      // Handle errors from the request itself (e.g., network errors, timeout errors)\n      console.error(\"Error during the request:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"treat\",\n      children: \"Treatment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"serchPat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter the ID of this consultation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"consult_id\",\n        placeholder: \"Consultation ID\",\n        value: formData.consult_id,\n        required: true,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter the treatment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"treatment\",\n        id: \"treatment\",\n        cols: \"30\",\n        rows: \"10\",\n        value: formData.treatment,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Treatment, \"XP+uMtE2e2VoBevViAN4xwkVeHQ=\");\n_c = Treatment;\nexport default Treatment;\nvar _c;\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"names":["React","useState","getUserFromStorage","jsxDEV","_jsxDEV","Treatment","_s","user","responseStatus","setResponseStatus","responseMessage","setResponseMessage","formData","setFormData","consult_id","cinPer","cin_personnel","treatment","handleInputChange","e","name","value","target","addTreatment","event","preventDefault","response","axios","post","headers","data","message","status","console","log","error","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","required","onChange","cols","rows","_c","$RefreshReg$"],"sources":["/Users/SNAKE/react-app/patientTriage-app/frontend/src/components/doctor/doctorContent/pages/treatment/treatment.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './treatment.css'\nimport { getUserFromStorage } from '../../../../../utils/storage'\n\nfunction Treatment() {\n    const user = getUserFromStorage()\n    const [responseStatus, setResponseStatus] = useState(0);\n    const [responseMessage, setResponseMessage] = useState('');\n    const [formData, setFormData] = useState({\n        consult_id: '',\n        cinPer: user.cin_personnel,\n        treatment: '',\n    })\n\n    // state of inputs\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n\n    // add treatment\n    const addTreatment = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/add_treatment', formData, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            // Extract data from the response\n            const data = response.data;\n            setResponseMessage(data.message);  // Assuming this is a function you've defined to set a response message\n            setFormData({\n                consult_id: '',\n                cinPer: user.cin_personnel,\n                treatment: '',\n            });\n\n            if (response.status === 201) {\n                // Handle success\n                setResponseStatus(response.status)\n                console.log(\"Success:\", data);\n            } else {\n                // Handle failure\n                setResponseStatus\n                console.error(\"Failure:\", data);\n            }\n\n        } catch (error) {\n            // Handle errors from the request itself (e.g., network errors, timeout errors)\n            console.error(\"Error during the request:\", error.message);\n        }\n    };\n\n\n    return (\n        <div>\n            <h2 id='treat'>Treatment</h2>\n\n            <form className=\"serchPat\">\n                <h4>Enter the ID of this consultation:</h4>\n                <input type=\"text\" name=\"consult_id\" placeholder=\"Consultation ID\" value={formData.consult_id} required onChange={handleInputChange} />\n                <h4>Enter the treatment:</h4>\n                <textarea name=\"treatment\" id=\"treatment\" cols=\"30\" rows=\"10\" value={formData.treatment} onChange={handleInputChange} required></textarea>\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Treatment"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}